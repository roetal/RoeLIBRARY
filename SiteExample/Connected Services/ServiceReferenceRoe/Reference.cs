//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SiteExample.ServiceReferenceRoe {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceRoe.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBook", ReplyAction="http://tempuri.org/IService1/AddBookResponse")]
        void AddBook(WcfServiceLibrary.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBook", ReplyAction="http://tempuri.org/IService1/AddBookResponse")]
        System.Threading.Tasks.Task AddBookAsync(WcfServiceLibrary.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBooks", ReplyAction="http://tempuri.org/IService1/GetAllBooksResponse")]
        WcfServiceLibrary.Book[] GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBooks", ReplyAction="http://tempuri.org/IService1/GetAllBooksResponse")]
        System.Threading.Tasks.Task<WcfServiceLibrary.Book[]> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookById", ReplyAction="http://tempuri.org/IService1/GetBookByIdResponse")]
        WcfServiceLibrary.Book GetBookById(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookById", ReplyAction="http://tempuri.org/IService1/GetBookByIdResponse")]
        System.Threading.Tasks.Task<WcfServiceLibrary.Book> GetBookByIdAsync(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookIdbyName", ReplyAction="http://tempuri.org/IService1/GetBookIdbyNameResponse")]
        int GetBookIdbyName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookIdbyName", ReplyAction="http://tempuri.org/IService1/GetBookIdbyNameResponse")]
        System.Threading.Tasks.Task<int> GetBookIdbyNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAuthor", ReplyAction="http://tempuri.org/IService1/AddAuthorResponse")]
        void AddAuthor(WcfServiceLibrary.Author a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAuthor", ReplyAction="http://tempuri.org/IService1/AddAuthorResponse")]
        System.Threading.Tasks.Task AddAuthorAsync(WcfServiceLibrary.Author a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthorName", ReplyAction="http://tempuri.org/IService1/GetAuthorNameResponse")]
        string GetAuthorName(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthorName", ReplyAction="http://tempuri.org/IService1/GetAuthorNameResponse")]
        System.Threading.Tasks.Task<string> GetAuthorNameAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthorById", ReplyAction="http://tempuri.org/IService1/GetAuthorByIdResponse")]
        WcfServiceLibrary.Author GetAuthorById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthorById", ReplyAction="http://tempuri.org/IService1/GetAuthorByIdResponse")]
        System.Threading.Tasks.Task<WcfServiceLibrary.Author> GetAuthorByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadAuthors", ReplyAction="http://tempuri.org/IService1/LoadAuthorsResponse")]
        void LoadAuthors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadAuthors", ReplyAction="http://tempuri.org/IService1/LoadAuthorsResponse")]
        System.Threading.Tasks.Task LoadAuthorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OnPropertyChanged", ReplyAction="http://tempuri.org/IService1/OnPropertyChangedResponse")]
        void OnPropertyChanged(string propertyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OnPropertyChanged", ReplyAction="http://tempuri.org/IService1/OnPropertyChangedResponse")]
        System.Threading.Tasks.Task OnPropertyChangedAsync(string propertyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUser", ReplyAction="http://tempuri.org/IService1/AddUserResponse")]
        void AddUser(WcfServiceLibrary.Users user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUser", ReplyAction="http://tempuri.org/IService1/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(WcfServiceLibrary.Users user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkusername", ReplyAction="http://tempuri.org/IService1/checkusernameResponse")]
        bool checkusername(WcfServiceLibrary.Users user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/checkusername", ReplyAction="http://tempuri.org/IService1/checkusernameResponse")]
        System.Threading.Tasks.Task<bool> checkusernameAsync(WcfServiceLibrary.Users user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserWithName", ReplyAction="http://tempuri.org/IService1/GetUserWithNameResponse")]
        WcfServiceLibrary.Users GetUserWithName(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserWithName", ReplyAction="http://tempuri.org/IService1/GetUserWithNameResponse")]
        System.Threading.Tasks.Task<WcfServiceLibrary.Users> GetUserWithNameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        WcfServiceLibrary.Users[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        System.Threading.Tasks.Task<WcfServiceLibrary.Users[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateUser", ReplyAction="http://tempuri.org/IService1/ValidateUserResponse")]
        WcfServiceLibrary.Users ValidateUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateUser", ReplyAction="http://tempuri.org/IService1/ValidateUserResponse")]
        System.Threading.Tasks.Task<WcfServiceLibrary.Users> ValidateUserAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthorBooks", ReplyAction="http://tempuri.org/IService1/GetAuthorBooksResponse")]
        WcfServiceLibrary.Book[] GetAuthorBooks(int authorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthorBooks", ReplyAction="http://tempuri.org/IService1/GetAuthorBooksResponse")]
        System.Threading.Tasks.Task<WcfServiceLibrary.Book[]> GetAuthorBooksAsync(int authorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllAuthor", ReplyAction="http://tempuri.org/IService1/GetAllAuthorResponse")]
        WcfServiceLibrary.Author[] GetAllAuthor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllAuthor", ReplyAction="http://tempuri.org/IService1/GetAllAuthorResponse")]
        System.Threading.Tasks.Task<WcfServiceLibrary.Author[]> GetAllAuthorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsUserAdmin", ReplyAction="http://tempuri.org/IService1/IsUserAdminResponse")]
        bool IsUserAdmin(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsUserAdmin", ReplyAction="http://tempuri.org/IService1/IsUserAdminResponse")]
        System.Threading.Tasks.Task<bool> IsUserAdminAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthorNameList", ReplyAction="http://tempuri.org/IService1/GetAuthorNameListResponse")]
        WcfServiceLibrary.Author[] GetAuthorNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthorNameList", ReplyAction="http://tempuri.org/IService1/GetAuthorNameListResponse")]
        System.Threading.Tasks.Task<WcfServiceLibrary.Author[]> GetAuthorNameListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddToCart", ReplyAction="http://tempuri.org/IService1/AddToCartResponse")]
        void AddToCart(WcfServiceLibrary.Shoping_cart SC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddToCart", ReplyAction="http://tempuri.org/IService1/AddToCartResponse")]
        System.Threading.Tasks.Task AddToCartAsync(WcfServiceLibrary.Shoping_cart SC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCartItemsByUsername", ReplyAction="http://tempuri.org/IService1/GetCartItemsByUsernameResponse")]
        WcfServiceLibrary.CartItemDto[] GetCartItemsByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCartItemsByUsername", ReplyAction="http://tempuri.org/IService1/GetCartItemsByUsernameResponse")]
        System.Threading.Tasks.Task<WcfServiceLibrary.CartItemDto[]> GetCartItemsByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getImageBytes", ReplyAction="http://tempuri.org/IService1/getImageBytesResponse")]
        byte[] getImageBytes(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getImageBytes", ReplyAction="http://tempuri.org/IService1/getImageBytesResponse")]
        System.Threading.Tasks.Task<byte[]> getImageBytesAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        void UpdateUser(WcfServiceLibrary.Users updatedUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(WcfServiceLibrary.Users updatedUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        void DeleteUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBook", ReplyAction="http://tempuri.org/IService1/DeleteBookResponse")]
        void DeleteBook(int bookID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBook", ReplyAction="http://tempuri.org/IService1/DeleteBookResponse")]
        System.Threading.Tasks.Task DeleteBookAsync(int bookID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAuthor", ReplyAction="http://tempuri.org/IService1/DeleteAuthorResponse")]
        void DeleteAuthor(int authorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteAuthor", ReplyAction="http://tempuri.org/IService1/DeleteAuthorResponse")]
        System.Threading.Tasks.Task DeleteAuthorAsync(int authorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddReview", ReplyAction="http://tempuri.org/IService1/AddReviewResponse")]
        void AddReview(WcfServiceLibrary.Reviews review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddReview", ReplyAction="http://tempuri.org/IService1/AddReviewResponse")]
        System.Threading.Tasks.Task AddReviewAsync(WcfServiceLibrary.Reviews review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAverageRating", ReplyAction="http://tempuri.org/IService1/GetAverageRatingResponse")]
        double GetAverageRating(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAverageRating", ReplyAction="http://tempuri.org/IService1/GetAverageRatingResponse")]
        System.Threading.Tasks.Task<double> GetAverageRatingAsync(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookReviews", ReplyAction="http://tempuri.org/IService1/GetBookReviewsResponse")]
        WcfServiceLibrary.Reviews[] GetBookReviews(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookReviews", ReplyAction="http://tempuri.org/IService1/GetBookReviewsResponse")]
        System.Threading.Tasks.Task<WcfServiceLibrary.Reviews[]> GetBookReviewsAsync(int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OpenAdminMenu", ReplyAction="http://tempuri.org/IService1/OpenAdminMenuResponse")]
        void OpenAdminMenu();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OpenAdminMenu", ReplyAction="http://tempuri.org/IService1/OpenAdminMenuResponse")]
        System.Threading.Tasks.Task OpenAdminMenuAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CloseAdminMenu", ReplyAction="http://tempuri.org/IService1/CloseAdminMenuResponse")]
        void CloseAdminMenu();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CloseAdminMenu", ReplyAction="http://tempuri.org/IService1/CloseAdminMenuResponse")]
        System.Threading.Tasks.Task CloseAdminMenuAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateBook", ReplyAction="http://tempuri.org/IService1/UpdateBookResponse")]
        void UpdateBook(WcfServiceLibrary.Book updatedBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateBook", ReplyAction="http://tempuri.org/IService1/UpdateBookResponse")]
        System.Threading.Tasks.Task UpdateBookAsync(WcfServiceLibrary.Book updatedBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBookFromCart", ReplyAction="http://tempuri.org/IService1/DeleteBookFromCartResponse")]
        void DeleteBookFromCart(int cartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBookFromCart", ReplyAction="http://tempuri.org/IService1/DeleteBookFromCartResponse")]
        System.Threading.Tasks.Task DeleteBookFromCartAsync(int cartID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUserReviews", ReplyAction="http://tempuri.org/IService1/DeleteUserReviewsResponse")]
        void DeleteUserReviews(int RevID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUserReviews", ReplyAction="http://tempuri.org/IService1/DeleteUserReviewsResponse")]
        System.Threading.Tasks.Task DeleteUserReviewsAsync(int RevID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : SiteExample.ServiceReferenceRoe.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<SiteExample.ServiceReferenceRoe.IService1>, SiteExample.ServiceReferenceRoe.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddBook(WcfServiceLibrary.Book book) {
            base.Channel.AddBook(book);
        }
        
        public System.Threading.Tasks.Task AddBookAsync(WcfServiceLibrary.Book book) {
            return base.Channel.AddBookAsync(book);
        }
        
        public WcfServiceLibrary.Book[] GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<WcfServiceLibrary.Book[]> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public WcfServiceLibrary.Book GetBookById(int bookId) {
            return base.Channel.GetBookById(bookId);
        }
        
        public System.Threading.Tasks.Task<WcfServiceLibrary.Book> GetBookByIdAsync(int bookId) {
            return base.Channel.GetBookByIdAsync(bookId);
        }
        
        public int GetBookIdbyName(string name) {
            return base.Channel.GetBookIdbyName(name);
        }
        
        public System.Threading.Tasks.Task<int> GetBookIdbyNameAsync(string name) {
            return base.Channel.GetBookIdbyNameAsync(name);
        }
        
        public void AddAuthor(WcfServiceLibrary.Author a) {
            base.Channel.AddAuthor(a);
        }
        
        public System.Threading.Tasks.Task AddAuthorAsync(WcfServiceLibrary.Author a) {
            return base.Channel.AddAuthorAsync(a);
        }
        
        public string GetAuthorName(int id) {
            return base.Channel.GetAuthorName(id);
        }
        
        public System.Threading.Tasks.Task<string> GetAuthorNameAsync(int id) {
            return base.Channel.GetAuthorNameAsync(id);
        }
        
        public WcfServiceLibrary.Author GetAuthorById(int id) {
            return base.Channel.GetAuthorById(id);
        }
        
        public System.Threading.Tasks.Task<WcfServiceLibrary.Author> GetAuthorByIdAsync(int id) {
            return base.Channel.GetAuthorByIdAsync(id);
        }
        
        public void LoadAuthors() {
            base.Channel.LoadAuthors();
        }
        
        public System.Threading.Tasks.Task LoadAuthorsAsync() {
            return base.Channel.LoadAuthorsAsync();
        }
        
        public void OnPropertyChanged(string propertyName) {
            base.Channel.OnPropertyChanged(propertyName);
        }
        
        public System.Threading.Tasks.Task OnPropertyChangedAsync(string propertyName) {
            return base.Channel.OnPropertyChangedAsync(propertyName);
        }
        
        public void AddUser(WcfServiceLibrary.Users user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(WcfServiceLibrary.Users user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public bool checkusername(WcfServiceLibrary.Users user) {
            return base.Channel.checkusername(user);
        }
        
        public System.Threading.Tasks.Task<bool> checkusernameAsync(WcfServiceLibrary.Users user) {
            return base.Channel.checkusernameAsync(user);
        }
        
        public WcfServiceLibrary.Users GetUserWithName(string username) {
            return base.Channel.GetUserWithName(username);
        }
        
        public System.Threading.Tasks.Task<WcfServiceLibrary.Users> GetUserWithNameAsync(string username) {
            return base.Channel.GetUserWithNameAsync(username);
        }
        
        public WcfServiceLibrary.Users[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<WcfServiceLibrary.Users[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public WcfServiceLibrary.Users ValidateUser(string username, string password) {
            return base.Channel.ValidateUser(username, password);
        }
        
        public System.Threading.Tasks.Task<WcfServiceLibrary.Users> ValidateUserAsync(string username, string password) {
            return base.Channel.ValidateUserAsync(username, password);
        }
        
        public WcfServiceLibrary.Book[] GetAuthorBooks(int authorId) {
            return base.Channel.GetAuthorBooks(authorId);
        }
        
        public System.Threading.Tasks.Task<WcfServiceLibrary.Book[]> GetAuthorBooksAsync(int authorId) {
            return base.Channel.GetAuthorBooksAsync(authorId);
        }
        
        public WcfServiceLibrary.Author[] GetAllAuthor() {
            return base.Channel.GetAllAuthor();
        }
        
        public System.Threading.Tasks.Task<WcfServiceLibrary.Author[]> GetAllAuthorAsync() {
            return base.Channel.GetAllAuthorAsync();
        }
        
        public bool IsUserAdmin(string username) {
            return base.Channel.IsUserAdmin(username);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserAdminAsync(string username) {
            return base.Channel.IsUserAdminAsync(username);
        }
        
        public WcfServiceLibrary.Author[] GetAuthorNameList() {
            return base.Channel.GetAuthorNameList();
        }
        
        public System.Threading.Tasks.Task<WcfServiceLibrary.Author[]> GetAuthorNameListAsync() {
            return base.Channel.GetAuthorNameListAsync();
        }
        
        public void AddToCart(WcfServiceLibrary.Shoping_cart SC) {
            base.Channel.AddToCart(SC);
        }
        
        public System.Threading.Tasks.Task AddToCartAsync(WcfServiceLibrary.Shoping_cart SC) {
            return base.Channel.AddToCartAsync(SC);
        }
        
        public WcfServiceLibrary.CartItemDto[] GetCartItemsByUsername(string username) {
            return base.Channel.GetCartItemsByUsername(username);
        }
        
        public System.Threading.Tasks.Task<WcfServiceLibrary.CartItemDto[]> GetCartItemsByUsernameAsync(string username) {
            return base.Channel.GetCartItemsByUsernameAsync(username);
        }
        
        public byte[] getImageBytes(int id) {
            return base.Channel.getImageBytes(id);
        }
        
        public System.Threading.Tasks.Task<byte[]> getImageBytesAsync(int id) {
            return base.Channel.getImageBytesAsync(id);
        }
        
        public void UpdateUser(WcfServiceLibrary.Users updatedUser) {
            base.Channel.UpdateUser(updatedUser);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(WcfServiceLibrary.Users updatedUser) {
            return base.Channel.UpdateUserAsync(updatedUser);
        }
        
        public void DeleteUser(int userId) {
            base.Channel.DeleteUser(userId);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int userId) {
            return base.Channel.DeleteUserAsync(userId);
        }
        
        public void DeleteBook(int bookID) {
            base.Channel.DeleteBook(bookID);
        }
        
        public System.Threading.Tasks.Task DeleteBookAsync(int bookID) {
            return base.Channel.DeleteBookAsync(bookID);
        }
        
        public void DeleteAuthor(int authorID) {
            base.Channel.DeleteAuthor(authorID);
        }
        
        public System.Threading.Tasks.Task DeleteAuthorAsync(int authorID) {
            return base.Channel.DeleteAuthorAsync(authorID);
        }
        
        public void AddReview(WcfServiceLibrary.Reviews review) {
            base.Channel.AddReview(review);
        }
        
        public System.Threading.Tasks.Task AddReviewAsync(WcfServiceLibrary.Reviews review) {
            return base.Channel.AddReviewAsync(review);
        }
        
        public double GetAverageRating(int bookId) {
            return base.Channel.GetAverageRating(bookId);
        }
        
        public System.Threading.Tasks.Task<double> GetAverageRatingAsync(int bookId) {
            return base.Channel.GetAverageRatingAsync(bookId);
        }
        
        public WcfServiceLibrary.Reviews[] GetBookReviews(int bookId) {
            return base.Channel.GetBookReviews(bookId);
        }
        
        public System.Threading.Tasks.Task<WcfServiceLibrary.Reviews[]> GetBookReviewsAsync(int bookId) {
            return base.Channel.GetBookReviewsAsync(bookId);
        }
        
        public void OpenAdminMenu() {
            base.Channel.OpenAdminMenu();
        }
        
        public System.Threading.Tasks.Task OpenAdminMenuAsync() {
            return base.Channel.OpenAdminMenuAsync();
        }
        
        public void CloseAdminMenu() {
            base.Channel.CloseAdminMenu();
        }
        
        public System.Threading.Tasks.Task CloseAdminMenuAsync() {
            return base.Channel.CloseAdminMenuAsync();
        }
        
        public void UpdateBook(WcfServiceLibrary.Book updatedBook) {
            base.Channel.UpdateBook(updatedBook);
        }
        
        public System.Threading.Tasks.Task UpdateBookAsync(WcfServiceLibrary.Book updatedBook) {
            return base.Channel.UpdateBookAsync(updatedBook);
        }
        
        public void DeleteBookFromCart(int cartID) {
            base.Channel.DeleteBookFromCart(cartID);
        }
        
        public System.Threading.Tasks.Task DeleteBookFromCartAsync(int cartID) {
            return base.Channel.DeleteBookFromCartAsync(cartID);
        }
        
        public void DeleteUserReviews(int RevID) {
            base.Channel.DeleteUserReviews(RevID);
        }
        
        public System.Threading.Tasks.Task DeleteUserReviewsAsync(int RevID) {
            return base.Channel.DeleteUserReviewsAsync(RevID);
        }
    }
}
